(function(a){a.fn.NetopesCheckBox=function(d){function k(b){switch(c.type){case "round_checkbox":a(b).addClass("clsCheckBoxRound");a(b).attr("src",c.baseUrl+"images/transparent.gif");break;case "switch":a(b).addClass("clsCheckBoxSwitch");a(b).attr("src",c.baseUrl+"images/transparent-47x28.gif");break;case "small_switch":a(b).addClass("clsCheckBoxSmallSwitch");a(b).attr("src",c.baseUrl+"images/transparent-27x16.gif");break;default:a(b).attr("src",c.baseUrl+"images/transparent.gif")}0<c.checkedClass.length?
a(b).addClass(c.checkedClass):a(b).addClass("cb-default-ck");0<c.uncheckedClass.length?a(b).addClass(c.uncheckedClass):a(b).addClass("cb-default-uk");if("function"===typeof c.onClick)a(b).on("click",function(a){try{c.onClick(b,a)}catch(e){console.log(e),console.log(c.onClick)}});else if("string"===typeof c.onClick&&0<c.onClick.length)a(b).on("click",function(a){try{eval(c.onClick)}catch(e){console.log(e),console.log(c.onClick)}});else a(b).on("click",function(){g.toggle(b)});if("function"===typeof c.onChange)a(b).on("change",
function(f){if("1"!==a(this).data("prevdef"))try{c.onChange(b,f)}catch(e){console.log(e),console.log(c.onChange)}});else if("string"===typeof c.onChange&&0<c.onChange.length)a(b).on("change",function(){if("1"!==a(this).data("prevdef"))try{eval(c.onChange)}catch(f){console.log(f),console.log(c.onChange)}})}var c={type:"checkbox",checkedClass:"",uncheckedClass:"",baseUrl:"",onChange:!1,onClick:!1};d&&a.extend(c,d);var g={toggle:function(b,c){if(a(b).prop("disabled")||a(b).prop("readonly"))return!1;
"1"===a(b).val()?a(b).val(0):a(b).val(1);!0!==c&&1!==c&&"1"!==c&&a(b).trigger("change")},check:function(b,c){if(a(b).prop("disabled")||a(b).prop("readonly"))return!1;a(b).val(1);!0!==c&&1!==c&&"1"!==c&&a(b).trigger("change")},uncheck:function(b,c){if(a(b).prop("disabled")||a(b).prop("readonly"))return!1;a(b).val(0);!0!==c&&1!==c&&"1"!==c&&a(b).trigger("change")}};if("string"===typeof d){if(g[d]){var h=Array.prototype.slice.call(arguments,1);h.unshift(this);return g[d].apply(this,h)}console.log("Invalid or inaccessible method: ["+
d+"]!")}else return this.each(function(){"INPUT"===this.nodeName&&"image"===this.type?k(this):(console.log("Invalid tag for NetopesCheckBox usage!"),console.log(this))})}})(jQuery);
